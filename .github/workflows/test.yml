name: Test Bot

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 pytest pytest-cov

      - name: Lint with flake8
        run: |
          # Stop build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Check bot.py imports and syntax
        run: |
          python -c "import bot"
        env:
          TELEGRAM_BOT_TOKEN: dummy_token_for_testing

      - name: Create required directories
        run: |
          mkdir -p audios stickers
          touch stickers/welcome.webp

      - name: Run basic functionality tests
        run: |
          # Test that the bot can be imported and basic functions work
          python -c "
          import bot
          # Test filename sanitization
          assert bot.sanitize_filename('test/file*name?.mp4') == 'test file name .mp4'
          assert bot.sanitize_filename('') == 'audio'
          assert bot.sanitize_filename('a'*300)[:200] == 'a'*200
          print('Basic tests passed!')
          "
        env:
          TELEGRAM_BOT_TOKEN: dummy_token_for_testing
